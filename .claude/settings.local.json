{
  "permissions": {
    "allow": [
      "Bash(npm run build:*)",
      "Bash(diff:*)",
      "Bash(gcloud functions list:*)",
      "Bash(gcloud functions describe:*)",
      "Bash(mkdir:*)",
      "Bash(gcloud functions deploy:*)",
      "Bash(gcloud functions export:*)",
      "Bash(gcloud functions logs read:*)",
      "Bash(gcloud api-gateway api-configs list:*)",
      "Bash(gcloud api-gateway gateways describe:*)",
      "Bash(gcloud run services get-iam-policy:*)",
      "Bash(gcloud auth:*)",
      "Bash(gcloud run services describe:*)",
      "Bash(gcloud services api-keys list:*)",
      "Bash(gcloud services api-keys get-key-string:*)",
      "Bash(gcloud iam service-accounts:*)",
      "Bash(--gen2 )",
      "Bash(--runtime=python311 )",
      "Bash(--region=us-central1 )",
      "Bash(--source=. )",
      "Bash(--entry-point=device_authenticator )",
      "Bash(--trigger-http )",
      "Bash(--no-allow-unauthenticated )",
      "Bash(--service-account=device-auth-sa@agile-being-466720-s0.iam.gserviceaccount.com )",
      "Bash(--project=agile-being-466720-s0 )",
      "Bash(--max-instances=5)",
      "Bash(gcloud run logs read:*)",
      "Bash(gcloud logging read:*)",
      "Bash(gcloud api-gateway apis describe:*)",
      "Bash(gcloud api-gateway api-configs describe:*)",
      "Bash(--gen2 )",
      "Bash(--runtime=python311 )",
      "Bash(--region=us-central1 )",
      "Bash(--source=. )",
      "Bash(--entry-point=token_vendor_machine )",
      "Bash(--trigger-http )",
      "Bash(--no-allow-unauthenticated )",
      "Bash(--service-account=tvm-sa@agile-being-466720-s0.iam.gserviceaccount.com )",
      "Bash(--project=agile-being-466720-s0 )",
      "Bash(--set-env-vars=\"WIF_PROJECT_NUMBER=767433945059,WIF_POOL_ID=anava-wif-pool,WIF_PROVIDER_ID=firebase-provider,TARGET_SERVICE_ACCOUNT_EMAIL=vertex-ai-sa@agile-being-466720-s0.iam.gserviceaccount.com\")",
      "Bash(gcloud config get-value:*)",
      "Bash(gcloud api-gateway apis list:*)",
      "Bash(gcloud api-gateway gateways list:*)",
      "Bash(ls:*)",
      "Bash(gcloud config set:*)",
      "Bash(gcloud services configs get-iam-policy:*)",
      "Bash(gcloud api-gateway api-configs create:*)",
      "Bash(--api=anava-api-anava-iot )",
      "Bash(--openapi-spec=/tmp/api-config-fixed-new.yaml )",
      "Bash(--backend-auth-service-account=apigw-invoker-sa@future-alcove-466802-b3.iam.gserviceaccount.com )",
      "Bash(--project=future-alcove-466802-b3)",
      "Bash(gcloud api-gateway gateways update:*)",
      "Bash(--api=anava-api-anava-iot )",
      "Bash(--api-config=config-fixed-manual )",
      "Bash(--location=us-central1 )",
      "Bash(find:*)",
      "Bash(--api=anava-api-anava-iot )",
      "Bash(--openapi-spec=/tmp/api-config-rock-verbena.yaml )",
      "Bash(--backend-auth-service-account=apigw-invoker-sa@rock-verbena-466803-q4.iam.gserviceaccount.com )",
      "Bash(--project=rock-verbena-466803-q4)",
      "Bash(--api=anava-api-anava-iot )",
      "Bash(--api-config=config-fixed-manual-v2 )",
      "Bash(--location=us-central1 )",
      "Bash(gcloud endpoints configs:*)",
      "Bash(grep:*)",
      "Bash(node:*)",
      "Bash(gcloud endpoints services get-iam-policy:*)",
      "mcp__multi-ai-collab__gemini_debug",
      "Bash(--flatten=\"bindings[].members\" )",
      "Bash(--format='table(bindings.role, bindings.members)' )",
      "Bash(--filter=\"bindings.members:user:ryan@anava.ai\")",
      "Bash(python3:*)",
      "mcp__multi-ai-collab__gemini_think_deep"
    ],
    "deny": []
  }
}