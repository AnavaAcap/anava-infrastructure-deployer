name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        include:
          - os: macos-latest
            platform: mac
            artifact-name: Anava-Vision-Mac
            build-output: release/*.dmg
          - os: windows-latest
            platform: win
            artifact-name: Anava-Vision-Windows
            build-output: release/*.exe

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build Electron app
      run: npm run dist:${{ matrix.platform }}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        CSC_NAME: ${{ secrets.CSC_NAME }}

    - name: List build outputs
      run: ls -la release/
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact-name }}
        path: ${{ matrix.build-output }}
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download Mac artifacts
      uses: actions/download-artifact@v4
      with:
        name: Anava-Vision-Mac
        path: release-mac

    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: Anava-Vision-Windows
        path: release-win

    - name: List downloaded artifacts
      run: |
        echo "Mac artifacts:"
        ls -la release-mac/
        echo "Windows artifacts:"
        ls -la release-win/

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: false
        prerelease: false
        name: Release ${{ github.ref_name }}
        body: |
          ## Anava Vision ${{ github.ref_name }}
          
          ### Installation
          
          **macOS**: Download the .dmg file and double-click to install
          **Windows**: Download the .exe installer and run it
          
          ### Changes
          Please see the commit history for changes in this release.
        files: |
          release-mac/*.dmg
          release-win/*.exe